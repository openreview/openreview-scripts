#!/usr/bin/env node

var fs = require('fs');
var request = require('request');

// The open review local url
var grpUrl = 'http://localhost:8529/_db/_system/openreview/groups';
var loginUrl = 'http://localhost:8529/_db/_system/openreview/login';
var noteUrl = 'http://localhost:8529/_db/_system/openreview/note';

var headers = { 'User-Agent': 'test-create-script' };

//or3 request bodies
var userpass = {
  'id': 'ari@host.com',
  'password': ''
};

function or3post(url, body, headers) {
  this.url = url;
  this.method = 'POST';
  this.port = 8529;
  this.json = true;
  this.body = body;
  this.headers = headers;
}

function callback(error, response, body) {
  if (!error && response.statusCode == 200) {
    console.log("SUCCESS")
    console.log(body)
  } else {
  console.log("ERROR: " + error);
  console.log("RESPONSE: " + response.statusCode);
  }
}

function loggedInHdr(token) {
  return {
  'Authorization': 'Bearer ' + token,
  'User-Agent': 'test-create-script',
  };
}

// REVIEW PROTO
function review_proto() {
  this.id = 'iclr.cc/ICLR/2016/-/workshop/review';
  this.authors = 'ICLR.cc/2016';
  this.readers = ['*'];
  this.reply = {
    'readers': ['*'],
    'content': {
      'title': '.{1,200}',
      'review': '.{1,5000}',
      'rating': '1|2|3|4|5',
      'confidence': '1|2|3|4|5',
    }
  };
  this.process = function(noteID) {
		  //send email to paper’s authors’ and reviewers’ email addresses
		  //set SELF.rdate to current time
		  };
}



function new_review_invite(id, paper_id) {
  var rev =  new review_proto();
  rev.super = 'ICLR.cc/2016/-/workshop/review';
  rev.id = id;
  rev.authors = 'ICLR.cc/2016';
  rev.writers = 'ICLR.cc/2016';
  rev.readers = ['*'];
  rev.reply = {
    'authors': ['~.*', 'ICLR.cc/2016/paper/123/reviewer/1'],
    'forum': paper_id,
    'parent': paper_id,
  }
  return rev;
}

function world_note() {
 return { 'id': 'review/1',
 	  'readers': ['*'],
	  'content': {
	    'title': 'Cool Title!',
	    'review': 'snazzy paper.',
	    'rating': 5,
	    'confidence': 5,
	    }
	 }
}

function create_note() {
    var loginReq = new or3post(loginUrl, userpass, headers);
    request(loginReq, function(error, response, body) {
    if (!error && response.statusCode == 200) {
        var token = body.token;
	var note = new or3post(noteUrl, world_note(), loggedInHdr(token));
	request(note, callback);
    }
  });
}


create_note()