function () {
  var or3client = lib.or3client;

  var UAIData = <<uaidata.js>>
  var CONFERENCE = UAIData.CONFERENCE;
  var COCHAIRS = UAIData.COCHAIRS;
  var SPC = UAIData.SPC;
  var PC = UAIData.PC;

  // Create an empty group for this paper, e.g. "auai.org/UAI/2017/paper444"
  var paperGroup = {
    'id': 'auai.org/UAI/2017/Paper' + note.number,
    'signatures': [CONFERENCE],
    'writers': [CONFERENCE],
    'members': [],
    'readers': ['everyone'],
    'signatories': []
  };

  var reviewerGroup = {
    'id': paperGroup.id + '/Reviewers',
    'signatures':[CONFERENCE],
    'writers':[CONFERENCE],
    'members':[],
    'readers':[CONFERENCE, COCHAIRS, SPC, paperGroup.id + '/Reviewers'],
    'signatories':[]
  };

  var reviewerNonReadersGroup = {
    'id': paperGroup.id + '/Reviewers/NonReaders',
    'signatures':[CONFERENCE],
    'writers':[CONFERENCE],
    'members':[],
    'readers':[CONFERENCE, COCHAIRS, SPC, paperGroup.id + '/Reviewers/NonReaders'],
    'signatories':[]
  };

  var areachairGroup = {
    'id':paperGroup.id + '/Area_Chair',
    'signatures':[CONFERENCE],
    'writers':[CONFERENCE],
    'members':[], //member to be added later by assignment script
    'readers':[COCHAIRS,SPC],
    'signatories':[CONFERENCE,paperGroup.id + '/Area_Chair']
  };

  var authorsGroupId = paperGroup.id + '/Authors';

  var metaReviewProcess = <<metaReviewProcess.js>>

  var metaReviewInvitation = {
    'id': 'auai.org/UAI/2017/-/Paper' + note.number + '/Meta/Review',
    'signatures': [CONFERENCE],
    'writers': [CONFERENCE],
    'invitees': ['auai.org/UAI/2017/Paper' + note.number + '/Area_Chair'],
    'noninvitees':[],
    'readers': [CONFERENCE,SPC,COCHAIRS],
    'process': metaReviewProcess + '',
    'duedate': 1507180500000, //duedate is Nov 5, 2017, 17:15:00 (5:15pm) Eastern Time
    'reply': {
      'forum': note.id,
      'replyto': note.id,
      'writers': {'values-regex':'auai.org/UAI/2017/Paper' + note.number + '/Area_Chair'},
      'signatures': {'values-regex':'auai.org/UAI/2017/Paper' + note.number + '/Area_Chair'},
      'readers': {
        'values': [COCHAIRS, authorsGroupId],
        'description': 'The users who will be allowed to read the above content.'
      },
      'content': {
        'title': {
          'order': 1,
          'value-regex': '.{1,500}',
          'description': 'Brief summary of your review.',
          'required':true
        },
        'metareview': {
          'order': 2,
          'value-regex': '[\\S\\s]{1,5000}',
          'description': 'Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.',
          'required':true
        },
        'recommendation': {
          'order': 3,
          'value-dropdown': [
            'Accept',
            'Reject'
          ],
          'required':true
        },
        'format': {
          'order': 4,
          'value-radio': [
            'Poster',
            'Oral'
          ],
          'required':true
        },
        'best paper':{
          'order': 5,
          'description': 'Nominate as best paper (if student paper, nominate for best student paper)',
          'value-radio': [
            'Yes',
            'No'
          ],
          'required':true
        }
      }
    }
  };

  var reviewProcess = <<reviewProcess.js>>

  var reviewInvitation = {
    'id': 'auai.org/UAI/2017/-/Paper' + note.number + '/Official/Review',
    'signatures': [CONFERENCE],
    'writers': [CONFERENCE],
    'invitees': ['auai.org/UAI/2017/Paper' + note.number + '/Reviewers'],
    'noninvitees':[],
    'readers': ['everyone'],
    'process': reviewProcess + '',
    'duedate': 1507180500000, //duedate is Nov 5, 2017, 17:15:00 (5:15pm) Eastern Time
    'reply': {
      'forum': note.id,
      'replyto': note.id,
      'writers': {'values': [CONFERENCE]},
      'signatures': {'values-regex':'auai.org/UAI/2017/Paper' + note.number + '/AnonReviewer[0-9]+'},
      'readers': {
        'values': [COCHAIRS, SPC, PC, authorsGroupId],
        'description': 'The users who will be allowed to read the above content.'
      },
      'nonreaders': {
        'values': [reviewerNonReadersGroup.id]
      },
      'content': {
        'title': {
          'order': 1,
          'value-regex': '.{1,500}',
          'description': 'Brief summary of your review.',
          'required':true
        },
        'review': {
          'order': 2,
          'value-regex': '[\\S\\s]{1,5000}',
          'description': 'Please provide an evaluation of the quality, clarity, originality and significance of this work, including a list of its pros and cons.',
          'required':true
        },
        'rating': {
          'order': 3,
          'value-dropdown': [
            '10: Top 5% of accepted papers, seminal paper',
            '9: Top 15% of accepted papers, strong accept',
            '8: Top 50% of accepted papers, clear accept',
            '7: Good paper, accept',
            '6: Marginally above acceptance threshold',
            '5: Marginally below acceptance threshold',
            '4: Ok but not good enough - rejection',
            '3: Clear rejection',
            '2: Strong rejection',
            '1: Trivial or wrong'
          ],
          'required':true
        },
        'confidence': {
          'order': 4,
          'value-radio': [
            '5: The reviewer is absolutely certain that the evaluation is correct and very familiar with the relevant literature',
            '4: The reviewer is confident but not absolutely certain that the evaluation is correct',
            '3: The reviewer is fairly confident that the evaluation is correct',
            '2: The reviewer is willing to defend the evaluation, but it is quite likely that the reviewer did not understand central parts of the paper',
            '1: The reviewer\'s evaluation is an educated guess'
          ],
          'required':true
        }
      }
    }
  };

  var commentProcess = <<commentProcess.js>>


  var allGroups = [COCHAIRS, PC, SPC, authorsGroupId];
  var openCommentInvite = {
    'id': 'auai.org/UAI/2017/-/Paper' + note.number + '/Open/Comment',
    'signatures': [CONFERENCE],
    'writers': [CONFERENCE],
    'invitees': [],
    'noninvitees':[],
    'readers': ['everyone'],
    'process': commentProcess + '',
    'reply': {
      'forum': note.id,      // links this note (comment) to the previously posted note (paper)
      'signatures': {
        'values-regex': allGroups.join('|'),
        'description': 'How your identity will be displayed with the above content.'
        },
      'writers': { 'values-regex': allGroups.join('|') },
      'readers': {
        'values': allGroups,
        'description': 'The users who will be allowed to read the above content.'
      },
      'content': {
        'title': {
          'order': 1,
          'value-regex': '.{1,500}',
          'description': 'Brief summary of your comment.',
          'required':true
        },
        'comment': {
          'order': 2,
          'value-regex': '[\\S\\s]{1,5000}',
          'description': 'Your comment or reply.',
          'required':true
        }
      }
    }
  };

  var confidentialGroups = [COCHAIRS, PC, SPC];
  var confidentialCommentInvite = {
    'id': 'auai.org/UAI/2017/-/Paper' + note.number + '/Confidential/Comment',
    'signatures': [CONFERENCE],
    'writers': [CONFERENCE],
    'invitees': [],
    'noninvitees': [authorsGroupId],
    'readers': ['everyone'],
    'process': commentProcess + '',
    'reply': {
      'forum': note.id,      // links this note (comment) to the previously posted note (paper)
      'signatures': {
        'values-regex': confidentialGroups.join('|'),
        'description': 'How your identity will be displayed with the above content.'
      },
      'writers': {'values-regex': confidentialGroups.join('|')},
      'readers': {
        'values': confidentialGroups,
        'description': 'The users who will be allowed to read the above content.'
      },
      'nonreaders': {
        'values': [authorsGroupId]
      },
      'content': {
        'title': {
          'order': 1,
          'value-regex': '.{1,500}',
          'description': 'Brief summary of your comment.',
          'required':true
        },
        'comment': {
          'order': 2,
          'value-regex': '[\\S\\s]{1,5000}',
          'description': 'Your comment or reply.',
          'required':true
        }
      }
    }
  };

  var recommendReviewerInvite = {
    'id': 'auai.org/UAI/2017/-/Paper' + note.number + '/Recommend/Reviewer',
    'duedate': 1507180500000,
    'signatures': [CONFERENCE],
    'writers': [CONFERENCE],
    'invitees': [areachairGroup.id],
    'noninvitees':[],
    'readers': ['everyone'],
    'process': null,
    'multiReply': true,
    'reply': {
      'forum': note.id,
      'signatures': {
        'values-regex': '~.*',
        'description': 'How your identity will be displayed with the above content.'
        },
      'writers': { 'values-regex': '~.*' },
      'readers': {
        'values-regex': '~.*',
        'description': 'The users who will be allowed to read the above content.'
      },
      'content': {
        'tag': {
          'description': 'Recommendation description',
          'order': 1,
          'values-url': '/groups?id=' + PC,
          'required': true
        }
      }
    }
  };

  or3client.or3request(or3client.grpUrl, paperGroup, 'POST', token)
  .then(result => {
    group_promises = [
      or3client.or3request(or3client.grpUrl, reviewerGroup, 'POST', token)
      .then(result => or3client.or3request(or3client.grpUrl, reviewerNonReadersGroup, 'POST', token)),
      or3client.or3request(or3client.grpUrl, areachairGroup, 'POST', token)
    ];

    return Promise.all(group_promises);
  })
  .then(result => {
    invitation_promises = [
      or3client.or3request(or3client.inviteUrl, metaReviewInvitation, 'POST', token),
      or3client.or3request(or3client.inviteUrl, reviewInvitation, 'POST', token),
      or3client.or3request(or3client.inviteUrl, confidentialCommentInvite, 'POST', token),
      or3client.or3request(or3client.inviteUrl, openCommentInvite, 'POST', token),
      or3client.or3request(or3client.inviteUrl, recommendReviewerInvite, 'POST', token)
    ];

    return Promise.all(invitation_promises);
  })
  .then(result => done())
  .catch(error => done(error));

  return true;
};
