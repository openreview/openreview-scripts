#!/usr/bin/python

import sys, os, copy

"""
GROUPS

Defines constants for CONF (the name of the conference), and for the names of each group.
All other groups will be named by joining the name with CONF: <CONF>/<NAME>

Example:

    CONF = 'my.conference/2017'
    PROGRAM_CHAIRS = 'Program_Chairs'

    --> my.conference/2017/Program_Chairs

"""

CONF = "aclweb.org/NAACL/2018/Preprint"
ADMIN = CONF + '/Admin'

AUTHORS = CONF + '/Authors'

DUE_TIMESTAMP = 1527757200000 # 17:00:00 EST on May 1, 2018
WEBPATH = os.path.join(os.path.dirname(__file__), '../webfield/conferenceWebfield.js')

"""
INVITATIONS

Defines constants for various invitations.
The full name of an invitation will be generated by joining the name with CONF by "/-/": <CONF>/-/<INVITATION_NAME>

Example:

    CONF = 'my.conference/2017'
    SUBMISSION = 'Submission'

    --> my.conference/2017/-/Submission

PARAMETERS

Dictionaries that represent argument combinations defining Group and Invitation permissions.

Example:

    restricted = {
        'readers': [CONF],
        'writers': [CONF],
        'signatories': [CONF],
    }

    The "restricted" configuration above will only allow the CONF group to read, write, and sign
    for the newly created Group that uses it.
"""

group_params = {
    'readers': [CONF],
    'writers': [CONF],
    'signatories': [CONF],
    'signatures': [CONF]
}

public_group_params = {
    'readers': ['everyone'],
    'writers': [CONF],
    'signatories': [CONF],
    'signatures': [CONF]
}

"""
/-/Submission

This is the invitation that users submit to. These are un-blinded notes. The process
function generates a /-/Blind_Submission note.

"""
SUBMISSION = CONF + '/-/Submission'

submission_params = {
    'readers': ['everyone'],
    'writers': [CONF],
    'invitees': ['~'],
    'signatures': [CONF],
    'process': os.path.join(os.path.dirname(__file__), '../process/submissionProcess.js'),
    'reply': {
        'forum': None,
        'replyto': None,
        'readers': {
            'description': 'The users who will be allowed to read the above content.',
            'values-copied': [CONF, '{content.authorids}', '{signatures}']
        },
        'signatures': {
            'description': 'Your authorized identity to be associated with the above content.',
            'values-regex': '~.*|' + CONF
        },
        'writers': {
            'values': [CONF]
        },
        'content':{
            'title': {
                'description': 'Title of paper.',
                'order': 1,
                'value-regex': '.{1,250}',
                'required':True
            },
            'authors': {
                'description': 'Comma separated list of author names. Please provide real names; identities will be anonymized.',
                'order': 2,
                'values-regex': "[^;,\\n]+(,[^,\\n]+)*",
                'required':True
            },
            'authorids': {
                'description': 'Comma separated list of author email addresses, lowercased, in the same order as above. For authors with existing OpenReview accounts, please make sure that the provided email address(es) match those listed in the author\'s profile. Please provide real emails; identities will be anonymized.',
                'order': 3,
                'values-regex': "([a-z0-9_\-\.]{2,}@[a-z0-9_\-\.]{2,}\.[a-z]{2,},){0,}([a-z0-9_\-\.]{2,}@[a-z0-9_\-\.]{2,}\.[a-z]{2,})",
                'required':True
            },
            'keywords': {
                'description': 'Comma separated list of keywords.',
                'order': 6,
                'values-regex': "(^$)|[^;,\\n]+(,[^,\\n]+)*"
            },
            'TL;DR': {
                'description': '\"Too Long; Didn\'t Read\": a short sentence describing your paper',
                'order': 7,
                'value-regex': '[^\\n]{0,250}',
                'required':False
            },
            'abstract': {
                'description': 'Abstract of paper.',
                'order': 8,
                'value-regex': '[\\S\\s]{1,5000}',
                'required':True
            },
            'pdf': {
                'description': 'Upload a PDF file that ends with .pdf',
                'order': 9,
                'value-regex': 'upload',
                'required':True
            }
        }
    }
}


"""
/-/Blind_Submission

This is the invitation for the blinded version of the submissions.
Each of these notes have an "original" field which points to the non-anonymous
version of the note. They are generated by the /-/Submission process function.

"""
BLIND_SUBMISSION = CONF + '/-/Blind_Submission'

blind_submission_params = {
    'readers': ['everyone'],
    'writers': [CONF],
    'invitees': [CONF],
    'signatures': [CONF],
    'reply': {
        'forum': None,
        'replyto': None,
        'readers': {
            'description': 'The users who will be allowed to read the above content.',
            'values': ['everyone']
        },
        'signatures': {
            'description': 'How your identity will be displayed with the above content.',
            'values': [CONF]
        },
        'writers': {
            'values': [CONF]
        },
        'content': {
            'authors': {
                'description': 'Comma separated list of author names, as they appear in the paper.',
                'order': 1,
                'values-regex': '.*',
                'required': False
            },
            'authorids': {
                'description': 'Comma separated list of author email addresses, in the same order as above.',
                'order': 2,
                'values-regex': '.*',
                'required': False
            }
        }
    }
}

"""
/-/Public_Comment

This is the invitation for non-anonymous comments made by the public.
Users sign using their tilde (~) IDs.
"""
PUBLIC_COMMENT = CONF + '/-/Public_Comment'

public_comment_params = {
    'readers': ['everyone'],
    'writers': [CONF],
    'invitees': ['~'],
    'noninvitees': [],
    'signatures': [CONF],
    'process': os.path.join(os.path.dirname(__file__), '../process/commentProcess.js'),
    'reply': {
        'forum': None,
        'replyto': None,
        'invitation': BLIND_SUBMISSION,
        'readers': {
            'description': 'The users who will be allowed to read the above content.',
            'values': ['everyone']
        },
        'signatures': {
            'description': 'How your identity will be displayed with the above content.',
            'values-regex': '~.*|\\(anonymous\\)'
        },
        'writers': {
            'values-regex': '~.*|\\(anonymous\\)'
        },
        'content':{
            'title': {
                'order': 0,
                'value-regex': '.{1,500}',
                'description': 'Brief summary of your comment.',
                'required': True
            },
            'comment': {
                'order': 1,
                'value-regex': '[\\S\\s]{1,5000}',
                'description': 'Your comment or reply (max 5000 characters).',
                'required': True
            }
        }
    }
}


"""
/-/Paper[0-9]+/Add_Revision

This is the invitation for paper revisions
"""

add_revision_params = {
    'readers': ['everyone'],
    'writers': [CONF],
    'invitees': [], # set during submission process function; replaced in invitations.py
    'signatures': [CONF],
    'process': os.path.abspath(os.path.join(os.path.dirname(__file__), '../process/addRevisionProcess.js')),
    'reply': {
        'forum': None,
        'referent': None,
        'signatures': submission_params['reply']['signatures'],
        'writers': submission_params['reply']['writers'],
        'readers': submission_params['reply']['readers'],
        'content': submission_params['reply']['content']
    }
}
